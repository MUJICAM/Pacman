/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GeneradorGrafico;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Random;

import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import laberinto3.Logica;

import java.util.Timer;//24/02/2015 ficha de colocacion
import javax.swing.JOptionPane;
//import javax.swing.Timer;

/**
 *
 * @author MujicaM
 */
public class Generar2 extends JFrame {

    /**
     * Creates new form Generar2
     */
    private boolean estado = false;
    private Logica LaberintoVirtual = new Logica();//se llama al constructor predefinido
    private JLabel grafico[][] = new JLabel[30][30];
    private int i = 1, j = 28;//para las posiciones del pacman
    private int f1_i = 14, f1_j = 13;//para las posiciones del fantasma 1
    private int f2_i = 14, f2_j = 14;//para las posiciones del fantasma 2
    private int f3_i = 14, f3_j = 15;//para las posiciones del fantasma 3
    private int f4_i = 14, f4_j = 16;//para las posiciones del fantasma 4

    public Generar2() {
        initComponents();

        //Todo del jFrame
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setSize(900, 700);

        setTitle("...::Pacman::..");
        setIconImage(new ImageIcon(getClass().getResource("Grafico/Imagenes/Iconos/icono1.png")).getImage());
        setVisible(true);
        //Todo lo del Jpanel
        PanelDelLaberinto.setVisible(true);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator2 = new javax.swing.JSeparator();
        PanelDelLaberinto = new javax.swing.JPanel();
        BotonIniciar = new javax.swing.JButton();
        MensajeVidas = new javax.swing.JLabel();
        MensajePuntos = new javax.swing.JLabel();
        MensajeNickname1 = new javax.swing.JLabel();
        NamePac1 = new javax.swing.JLabel();
        VidasPac1 = new javax.swing.JLabel();
        PuntosPac1 = new javax.swing.JLabel();
        BotonPausa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setIconImages(null);

        PanelDelLaberinto.setBackground(new java.awt.Color(0, 0, 0));

        BotonIniciar.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        BotonIniciar.setForeground(new java.awt.Color(51, 51, 51));
        BotonIniciar.setText("Iniciar juego");
        BotonIniciar.setPreferredSize(new java.awt.Dimension(120, 120));
        BotonIniciar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                BotonIniciarMouseClicked(evt);
            }
        });
        BotonIniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonIniciarActionPerformed(evt);
            }
        });

        MensajeVidas.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        MensajeVidas.setForeground(new java.awt.Color(255, 255, 255));
        MensajeVidas.setText("Vidas:");
        MensajeVidas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        MensajePuntos.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        MensajePuntos.setForeground(new java.awt.Color(255, 255, 255));
        MensajePuntos.setText("Puntos:");
        MensajePuntos.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        MensajeNickname1.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        MensajeNickname1.setForeground(new java.awt.Color(255, 255, 255));
        MensajeNickname1.setText("NickName:");
        MensajeNickname1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        NamePac1.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        NamePac1.setForeground(new java.awt.Color(255, 255, 255));
        NamePac1.setText("   ");
        NamePac1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        VidasPac1.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        VidasPac1.setForeground(new java.awt.Color(255, 255, 255));
        VidasPac1.setText("   ");
        VidasPac1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        PuntosPac1.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        PuntosPac1.setForeground(new java.awt.Color(255, 255, 255));
        PuntosPac1.setText("   ");
        PuntosPac1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));

        BotonPausa.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        BotonPausa.setForeground(new java.awt.Color(51, 51, 51));
        BotonPausa.setText("Pausa");
        BotonPausa.setPreferredSize(new java.awt.Dimension(120, 120));
        BotonPausa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonPausaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelDelLaberintoLayout = new javax.swing.GroupLayout(PanelDelLaberinto);
        PanelDelLaberinto.setLayout(PanelDelLaberintoLayout);
        PanelDelLaberintoLayout.setHorizontalGroup(
            PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelDelLaberintoLayout.createSequentialGroup()
                .addGap(639, 639, 639)
                .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(NamePac1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(MensajeNickname1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(BotonIniciar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelDelLaberintoLayout.createSequentialGroup()
                        .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MensajeVidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(VidasPac1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(MensajePuntos, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                            .addComponent(PuntosPac1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(BotonPausa, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40))
        );
        PanelDelLaberintoLayout.setVerticalGroup(
            PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelDelLaberintoLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonIniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BotonPausa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(MensajePuntos)
                    .addComponent(MensajeVidas)
                    .addComponent(MensajeNickname1))
                .addGap(4, 4, 4)
                .addGroup(PanelDelLaberintoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NamePac1)
                    .addComponent(VidasPac1)
                    .addComponent(PuntosPac1))
                .addContainerGap(720, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelDelLaberinto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelDelLaberinto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonIniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonIniciarActionPerformed
        if (estado) {
            JOptionPane.showMessageDialog(null, "mamaste");
        } else {
            LaberintoVirtual.getM()[28][1] = LaberintoVirtual.getPa();
            LaberintoVirtual.getM()[f1_i][f1_j] = LaberintoVirtual.getF1();

            NamePac1.setText(LaberintoVirtual.getPa().getNombre());
            VidasPac1.setText(Integer.toString(LaberintoVirtual.getPa().getVida()));
            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos()));

            GenerardorGrafico();

            int h = 10;
            accion(i, j);
            MoverFantasma1(f1_i, f1_j);
        }
    }//GEN-LAST:event_BotonIniciarActionPerformed

    private void BotonPausaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonPausaActionPerformed

    }//GEN-LAST:event_BotonPausaActionPerformed

    private void BotonIniciarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_BotonIniciarMouseClicked
            //miguel es pato y la tuya tambn
    }//GEN-LAST:event_BotonIniciarMouseClicked
//metodos

    public void GenerardorGrafico() {
        //Aqui reubicamos el tablero ya que se encuentra invertida originalmente**********************************************************************   
        Object aux[][] = new Object[30][30];//Matriz auxliar para ordenar bn el tablero
        try {
            for (int i = 0; i < 30; i++) {
                for (int j = 0; j < 30; j++) {
                    aux[i][j] = LaberintoVirtual.getM()[j][i];
                }
            }
        } catch (Exception e) {
            System.out.println("aqui esta el error en el for 1");
        }

        try {
            for (int i = 0; i < 30; i++) {
                for (int j = 0; j < 30; j++) {
                    LaberintoVirtual.getM()[i][j] = aux[i][j];
                }
            }
        } catch (Exception e) {
            System.out.println("aqui esta el error en el for 2");
        }

        //fin la reubicacion**************************************************************  
        //PINTA 
        try {
            for (int i = 0; i < 30; i++) {
                for (int j = 0; j < 30; j++) {
                    grafico[i][j] = new JLabel();
                    PanelDelLaberinto.add(grafico[i][j]);
                    //si es muro
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getMu()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es fruta
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getCc()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es calle
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getCa()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es calle y punto
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getCp()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es pacman amarillo
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getPa()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Pacman/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es Fantasma1
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getF1()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es Fantasma2
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getF2()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es Fantasma3
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getF3()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                    //si es Fantasma4
                    if (LaberintoVirtual.getM()[i][j] == LaberintoVirtual.getF4()) {
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                    }
                }
            }
        } catch (Exception e) {
            System.out.println("adentro del for 3 esta el error");
        }

        try {
            for (int i = 0; i < 30; i++) {
                for (int j = 0; j < 30; j++) {
                    grafico[i][j].setBounds(i * 20, j * 20, 20, 20);
                    grafico[i][j].validate();
                }
            }
        } catch (Exception e) {
            System.out.println("adentro del for 4 esta el error");
        }
    }
//mover pacman original

    public void MoverPacman(KeyEvent evt) throws InterruptedException {
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_UP: {//mover a arriba        
                if (LaberintoVirtual.getM()[i][j - 1] != LaberintoVirtual.getMu()) {
                    if ((LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getCp())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(1);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos()));

                    } //fin de validar puntos
                    //validar poder de la cereza
                    if ((LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getCc())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(100);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos

                        LaberintoVirtual.getPa().setEstado(true);//activamos el poder del pacaman

                    }
                    //validamos q el poder esta activa para que coma fantasmas
                    if (LaberintoVirtual.getPa().getEstado() == true) {
                        if (LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF1()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j - 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f1_i = 13;
                            f1_j = 14;
                            LaberintoVirtual.getM()[f1_i][f1_j] = LaberintoVirtual.getF1();//posicion inicial del fantasma f1
                            grafico[f1_i][f1_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f1_i, f1_j) + ".jpg")));

                        }
                        if (LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF2()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j - 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 14;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f2_i][f2_j] = LaberintoVirtual.getF2();//posicion inicial del fantasma f1
                            grafico[f2_i][f2_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f2_i, f2_j) + ".jpg")));

                        }

                        if (LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF3()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j - 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f3_i = 15;
                            f3_j = 14;
                            LaberintoVirtual.getM()[f3_i][f3_j] = LaberintoVirtual.getF3();//posicion inicial del fantasma f1
                            grafico[f3_i][f3_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f3_i, f3_j) + ".jpg")));

                        }
                        if (LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF4()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j - 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 16;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f4_i][f4_j] = LaberintoVirtual.getF4();//posicion inicial del fantasma f1
                            grafico[f4_i][f4_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f4_i, f4_j) + ".jpg")));

                        }
                    }
                    if (LaberintoVirtual.getPa().getEstado() != true) {
                        //en el if de abajo verificamos que no se encuentre un fantasma si lo hay se le quitara una vida al pacman y regresara a su posicion original
                        if (LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF1()
                                || LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF2()
                                || LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF3()
                                || LaberintoVirtual.getM()[i][j - 1] == LaberintoVirtual.getF4()) {

                            LaberintoVirtual.restarVidas(1);
                            VidasPac1.setText(Integer.toString(LaberintoVirtual.getPa().getVida()));
                            System.out.println("Vidas= " + LaberintoVirtual.vidas());

                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                            i = 1;
                            j = 28;
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//posicion inicial
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/pacman/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                            break;
                        }
                    }
                    j -= 1;
                    LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                    grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Pacman/paRRIBA.jpg")));

                    LaberintoVirtual.getM()[i][j + 1] = LaberintoVirtual.getCa();
                    grafico[i][j + 1].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j + 1) + ".jpg")));
                    break;

                } else {
                    System.out.println("Hay muro no se mueve");
                }
                break;
            }

            case KeyEvent.VK_DOWN: {
                //mover a abajo
                if (LaberintoVirtual.getM()[i][j + 1] != LaberintoVirtual.getMu()) {
                    if ((LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getCp())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(1);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos()));
                        System.out.println("Puntos= " + LaberintoVirtual.puntos());//mostramos el punto

                    } //fin de validar puntos
                    //validar poder de la cereza
                    if ((LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getCc())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(100);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos

                        LaberintoVirtual.getPa().setEstado(true);//activamos el poder del pacaman
                        System.out.println("Puntos= " + LaberintoVirtual.puntos());//mostramos el punto

                    }
                    //validamos q el poder esta activa coma fantasmas
                    if (LaberintoVirtual.getPa().getEstado() == true) {
                        if (LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF1()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j + 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f1_i = 13;
                            f1_j = 14;
                            LaberintoVirtual.getM()[f1_i][f1_j] = LaberintoVirtual.getF1();//posicion inicial del fantasma f1
                            grafico[f1_i][f1_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f1_i, f1_j) + ".jpg")));
                            break;
                        }
                        if (LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF2()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j + 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 14;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f2_i][f2_j] = LaberintoVirtual.getF2();//posicion inicial del fantasma f1
                            grafico[f2_i][f2_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f2_i, f2_j) + ".jpg")));
                            break;
                        }

                        if (LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF3()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j + 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f3_i = 15;
                            f3_j = 14;
                            LaberintoVirtual.getM()[f3_i][f3_j] = LaberintoVirtual.getF3();//posicion inicial del fantasma f1
                            grafico[f3_i][f3_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f3_i, f3_j) + ".jpg")));
                            break;
                        }
                        if (LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF4()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i][j + 1] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 16;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f4_i][f4_j] = LaberintoVirtual.getF4();//posicion inicial del fantasma f1
                            grafico[f4_i][f4_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f4_i, f4_j) + ".jpg")));
                            break;
                        }
                    }
                    if (LaberintoVirtual.getPa().getEstado() != true) {
                        //en el if de abajo verificamos que no se encuentre un fantasma si lo hay se le quitara una vida al pacman y regresara a su posicion original
                        if (LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF1()
                                || LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF2()
                                || LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF3()
                                || LaberintoVirtual.getM()[i][j + 1] == LaberintoVirtual.getF4()) {

                            LaberintoVirtual.restarVidas(1);
                            VidasPac1.setText(Integer.toString(LaberintoVirtual.getPa().getVida()));
                            System.out.println("Vidas= " + LaberintoVirtual.vidas());

                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                            i = 1;
                            j = 28;
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//posicion inicial
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/pacman/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                            break;
                        }
                    }
                    j += 1;
                    LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                    grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Pacman/paBAJO.jpg")));

                    LaberintoVirtual.getM()[i][j - 1] = LaberintoVirtual.getCa();
                    grafico[i][j - 1].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j - 1) + ".jpg")));
                    break;

                } else {
                    System.out.println("Hay muro no se mueve");
                }
                break;
            }

            case KeyEvent.VK_LEFT: {
                //mover a la izquierda 
                if (LaberintoVirtual.getM()[i - 1][j] != LaberintoVirtual.getMu()) {
                    if ((LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getCp())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(1);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos()));
                        System.out.println("Puntos= " + LaberintoVirtual.puntos());//mostramos el punto

                    } //fin de validar puntos
                    //validar poder de la cereza
                    if ((LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getCc())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(100);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos

                        LaberintoVirtual.getPa().setEstado(true);//activamos el poder del pacaman
                        System.out.println("Puntos= " + LaberintoVirtual.puntos());//mostramos el punto

                    }
                    //validamos q el poder esta activa coma fantasmas
                    if (LaberintoVirtual.getPa().getEstado() == true) {
                        if (LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF1()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i - 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f1_i = 13;
                            f1_j = 14;
                            LaberintoVirtual.getM()[f1_i][f1_j] = LaberintoVirtual.getF1();//posicion inicial del fantasma f1
                            grafico[f1_i][f1_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f1_i, f1_j) + ".jpg")));

                        }
                        if (LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF2()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i - 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 14;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f2_i][f2_j] = LaberintoVirtual.getF2();//posicion inicial del fantasma f1
                            grafico[f2_i][f2_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f2_i, f2_j) + ".jpg")));

                        }

                        if (LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF3()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i - 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f3_i = 15;
                            f3_j = 14;
                            LaberintoVirtual.getM()[f3_i][f3_j] = LaberintoVirtual.getF3();//posicion inicial del fantasma f1
                            grafico[f3_i][f3_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f3_i, f3_j) + ".jpg")));

                        }
                        if (LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF4()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos
                            LaberintoVirtual.getM()[i - 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 16;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f4_i][f4_j] = LaberintoVirtual.getF4();//posicion inicial del fantasma f1
                            grafico[f4_i][f4_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f4_i, f4_j) + ".jpg")));

                        }
                    }
                    if (LaberintoVirtual.getPa().getEstado() != true) {
                        //en el if de abajo verificamos que no se encuentre un fantasma si lo hay se le quitara una vida al pacman y regresara a su posicion original
                        if (LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF1()
                                || LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF2()
                                || LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF3()
                                || LaberintoVirtual.getM()[i - 1][j] == LaberintoVirtual.getF4()) {

                            LaberintoVirtual.restarVidas(1);
                            VidasPac1.setText(Integer.toString(LaberintoVirtual.getPa().getVida()));
                            System.out.println("Vidas= " + LaberintoVirtual.vidas());

                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                            i = 1;
                            j = 28;
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//posicion inicial
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/pacman/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                            break;
                        }
                    }
                    i -= 1;
                    LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                    grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Pacman/paIZQ.jpg")));

                    LaberintoVirtual.getM()[i + 1][j] = LaberintoVirtual.getCa();
                    grafico[i + 1][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i + 1, j) + ".jpg")));
                    break;

                } else {
                    System.out.println("Hay muro no se mueve");
                }
                break;
            }

            case KeyEvent.VK_RIGHT: {
                //mover a la derecha 
                if (LaberintoVirtual.getM()[i + 1][j] != LaberintoVirtual.getMu()) {
                    if ((LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getCp())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(1);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos()));
                        System.out.println("Puntos= " + LaberintoVirtual.puntos());//mostramos el punto

                    } //fin de validar puntos
                    //validar poder de la cereza
                    if ((LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getCc())) {//valida q si hay un punto lo sumara a pacman
                        LaberintoVirtual.sumaPuntos(100);//agregamos el punto
                        PuntosPac1.setText(Integer.toString(LaberintoVirtual.getPa().getPuntos())); //para mostrar los puntos

                        LaberintoVirtual.getPa().setEstado(true);//activamos el poder del pacaman

                    }
                    //validamos q el poder esta activa coma fantasmas
                    if (LaberintoVirtual.getPa().getEstado() == true) {
                        if (LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF1()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            LaberintoVirtual.getM()[i + 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f1_i = 14;
                            f1_j = 13;
                            LaberintoVirtual.getM()[f1_i][f1_j] = LaberintoVirtual.getF1();//posicion inicial del fantasma f1
                            grafico[f1_i][f1_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f1_i, f1_j) + ".jpg")));

                        }
                        if (LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF2()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            LaberintoVirtual.getM()[i + 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 14;
                            f2_j = 14;
                            LaberintoVirtual.getM()[f2_i][f2_j] = LaberintoVirtual.getF2();//posicion inicial del fantasma f1
                            grafico[f2_i][f2_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f2_i, f2_j) + ".jpg")));

                        }

                        if (LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF3()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            LaberintoVirtual.getM()[i + 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f3_i = 14;
                            f3_j = 15;
                            LaberintoVirtual.getM()[f3_i][f3_j] = LaberintoVirtual.getF3();//posicion inicial del fantasma f1
                            grafico[f3_i][f3_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f3_i, f3_j) + ".jpg")));

                        }
                        if (LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF4()) {
                            LaberintoVirtual.sumaPuntos(100);//suma 100 puntos por fastasma comido
                            LaberintoVirtual.getM()[i + 1][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            f2_i = 14;
                            f2_j = 16;
                            LaberintoVirtual.getM()[f4_i][f4_j] = LaberintoVirtual.getF4();//posicion inicial del fantasma f1
                            grafico[f4_i][f4_j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(f4_i, f4_j) + ".jpg")));

                        }
                    }
                    if (LaberintoVirtual.getPa().getEstado() != true) {
                        //en el if de abajo verificamos que no se encuentre un fantasma si lo hay se le quitara una vida al pacman y regresara a su posicion original
                        if (LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF1()
                                || LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF2()
                                || LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF3()
                                || LaberintoVirtual.getM()[i + 1][j] == LaberintoVirtual.getF4()) {

                            LaberintoVirtual.restarVidas(1);
                            VidasPac1.setText(Integer.toString(LaberintoVirtual.getPa().getVida()));
                            System.out.println("Vidas= " + LaberintoVirtual.vidas());

                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getCa();
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                            i = 1;
                            j = 28;
                            LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//posicion inicial
                            grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/pacman/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));
                            break;
                        }
                    }
                    i += 1;
                    LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getPa();//iguala al pacman a la siguiente posision
                    grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Pacman/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                    LaberintoVirtual.getM()[i - 1][j] = LaberintoVirtual.getCa();
                    grafico[i - 1][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i - 1, j) + ".jpg")));
                    break;

                } else {
                    System.out.println("Hay muro no se mueve");
                }
                break;
            }
            default: {
                System.out.println("No presionaste ninguna tecla");
            }

        }
    }

    public void accion(int i, int j) {
        BotonIniciar.addKeyListener(new KeyListener() {

            @Override
            public void keyTyped(KeyEvent ke) {

            }

            @Override
            public void keyPressed(KeyEvent ke) {

            }

            @Override
            public void keyReleased(KeyEvent ke) {
                try {
                    MoverPacman(ke);
                } catch (InterruptedException e) {
                    System.out.println("Error de mover");
                }
            }
        });
        setFocusable(true);
    }

    public void MoverFantasma1(int i, int j) {
        for (int k = 0; k < 1000; k++) {
            int direccion = 0;
            Random random = new Random();
            direccion = random.nextInt(4);
            System.out.println("4");
            switch (direccion) {
                case 0:
                    if (LaberintoVirtual.getM()[i][(j - 1)] != LaberintoVirtual.getMu()) {
                        j--;
                        LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getF1();
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                        LaberintoVirtual.getM()[i][(j + 1)] = LaberintoVirtual.getCa();
                        grafico[i][(j + 1)].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j + 1) + ".jpg")));
                    } else {
                        System.out.println("Hay muro no se mueve");
                    }
                    break;
                case 1:
                    if (LaberintoVirtual.getM()[i][(j + 1)] != LaberintoVirtual.getMu()) {
                        j++;
                        LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getF1();
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                        LaberintoVirtual.getM()[i][(j - 1)] = LaberintoVirtual.getCa();
                        grafico[i][(j - 1)].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i, j - 1) + ".jpg")));
                    } else {
                        System.out.println("Hay muro no se mueve");
                    }
                    break;
                case 2:
                    if (LaberintoVirtual.getM()[(i - 1)][j] != LaberintoVirtual.getMu()) {
                        i--;
                        LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getF1();
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                        LaberintoVirtual.getM()[(i + 1)][j] = LaberintoVirtual.getCa();
                        grafico[(i + 1)][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i + 1, j) + ".jpg")));
                    } else {
                        System.out.println("Hay muro no se mueve");
                    }
                    break;
                case 3:
                    if (LaberintoVirtual.getM()[(i + 1)][j] != LaberintoVirtual.getMu()) {
                        i++;
                        LaberintoVirtual.getM()[i][j] = LaberintoVirtual.getF1();
                        grafico[i][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Fantasma/" + LaberintoVirtual.CodigoImagen(i, j) + ".jpg")));

                        LaberintoVirtual.getM()[(i - 1)][j] = LaberintoVirtual.getCa();
                        grafico[(i - 1)][j].setIcon(new ImageIcon(getClass().getResource("Grafico/Imagenes/Casilla/" + LaberintoVirtual.CodigoImagen(i - 1, j) + ".jpg")));
                    } else {
                        System.out.println("Hay muro no se mueve");
                    }
                    break;
                default:
                    System.out.println("No presionaste ninguna tecla");
            }
        }
    }

//fin de metodos
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Generar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Generar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Generar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Generar2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonIniciar;
    private javax.swing.JButton BotonPausa;
    private javax.swing.JLabel MensajeNickname1;
    private javax.swing.JLabel MensajePuntos;
    private javax.swing.JLabel MensajeVidas;
    private javax.swing.JLabel NamePac1;
    private javax.swing.JPanel PanelDelLaberinto;
    private javax.swing.JLabel PuntosPac1;
    private javax.swing.JLabel VidasPac1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

}
